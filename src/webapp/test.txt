@app.route("/", methods = ["POST", "GET"])
def index():
    if request.method == "POST":
        dataframe_url = request.form["dataframe_url"]
        return redirect(url_for("pagerank_scores", dataframe = dataframe_url))
    else:
        return render_template("index.html")


@app.route("/pagerank-scores/<dataframe>", methods = ["GET", "POST"])
def pagerank_scores(dataframe):
    if request.method == "POST":
        paper_id = request.form["paper_id"]
        return redirect(url_for("subgraph", paper = paper_id)) 
    else:
        paper_dataframe = pd.read_json(dataframe)
        citation_graph = create_citation_graph(paper_dataframe)
        
        scores = nx.pagerank(citation_graph)
        sorted_scores = sorted(scores.items(), key = lambda x : x[1], reverse = True)
        
        triples = []
        for item in sorted_scores:
            input_links = citation_graph.in_edges(item[0])
            triples.append( (item[0], item[1], len(input_links)) )
        return render_template("pagerank.html", triples = triples)


# INDEX HTML #
{% extends "base.html" %}
{% block import %}
    <link rel = "stylesheet" href = "/staticFiles/index.css">
{% endblock %}
{% block title%} Flask Graph Visualization {% endblock%}
{% block content%}
    <div class = "d-flex justify-content-center" style = "border: 1px solid red;">
        <form class = "text-center" action = "#" method = "POST">
            <div class = "form-group mb-3">
                <input class = "form-control" type = "file" name = "dataframe_url" id = "formFile">
                <label for = "formFile" class = "form-label">Carica un dataset in formato .json per calcolarne il grafo di citazioni</label>
            </div>
            <button type = "submit" class= "btn btn-primary mx-sm-3 mb-2">Visualize Subgraph</button>
        </form>
    </div>
{% endblock %}

# INDEX CSS #
.form-label {
    font-size: 14px;
}

.form-control {
    width: 800px;
}